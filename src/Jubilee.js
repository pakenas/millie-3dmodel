/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF, useTexture, Html } from '@react-three/drei'
import { useLoader } from '@react-three/fiber';
import { TextureLoader } from 'three/src/loaders/TextureLoader';
import { MeshStandardMaterial, RepeatWrapping} from 'three';

export default function Jubilee({model, ...props}) {
  const { nodes, materials } = useGLTF('/v2/jubilee/Watches_FBX_Export.gltf')


const [roughnessMap] = useLoader(TextureLoader, [
  '/txt/Jubilee/Copper/Strap_Roughness.jpg'
])



const base = useLoader(TextureLoader, '/txt/Jubilee/Copper/Strap_BaseColor.jpg')
base.wrapS = RepeatWrapping;
base.wrapT = RepeatWrapping;
base.repeat.set(1, 1);
base.flipY = false;
base.mapping = RepeatWrapping;

const displacement = useLoader(TextureLoader, '/txt/Jubilee/Copper/Strap_Displacement.jpg')

const normal = useLoader(TextureLoader, '/txt/Jubilee/Copper/Strap_Normal.jpg')

const metalness = useLoader(TextureLoader, '/txt/Jubilee/Copper/Strap_Metallic.jpg')

const roughness2 = useLoader(TextureLoader, '/txt/Jubilee/Copper/Strap_Roughness.jpg')


const hover = e => e.stopPropagation() && setHover(true)
const [hovered, setHover] = useState(false)
  
  return (
    <group {...props} dispose={null}>

      {/* <directionalLight intensity={0.5} position={[0, 0, 0]} /> */}
      {/* <pointLight intensity={0.5} position={[0, 0, 0]} />
      <pointLight intensity={0.5} position={[1000, 500, 0]} />
      <pointLight intensity={0.5} position={[5, -10, -10]} /> */}

      <group position={[0, 0, 0]}>
        <mesh geometry={nodes.Plane011.geometry} 
        //Add prop to change material
        material={
          new MeshStandardMaterial({
            map: base,
            displacementMap: displacement,
            normalMap: normal,
            // metalnessMap: metalness,
            roughnessMap: roughnessMap,
            metalness: true,
            roughness: true,
            displacementScale: 0.
          })
        } 
        onPointerOver={(e) => console.log("hovered")}
        >  
        {hovered && (
          
        <Html scaleFactor={10}>
          <>
          <div className="w-screen h-screen bg-black">
          TWDAdw
          </div>
          </>
        </Html>
      )}        
          </mesh>


        <mesh geometry={nodes.Plane011_1.geometry} 
        
        material={materials['Face_Middle.Bronze']}
        >
          </mesh>
        <mesh geometry={nodes.Plane011_2.geometry} material={materials['Display.005']} />

        <mesh geometry={nodes.Plane011_3.geometry} material={materials['Face_RubbyWhite.004']} />

        <mesh geometry={nodes.Plane011_4.geometry} material={materials.Screws_Titanium} />

        <mesh geometry={nodes.Plane011_5.geometry} material={materials['Back_.CarbonGreen']} />
      </group>
    </group>
  )
}

useGLTF.preload('/v2/jubilee/Watches_FBX_Export.gltf')